{"version":3,"file":"u-subsection.js","sources":["node_modules/uview-pro/components/u-subsection/u-subsection.vue","/Users/Coding/uniapp/weixinphone/node_modules/uview-pro/components/u-subsection/u-subsection.vue?type=component"],"sourcesContent":["<template>\n    <view :id=\"instanceId\" class=\"u-subsection\" :style=\"subsectionStyle\">\n        <view\n            class=\"u-item u-line-1\"\n            :style=\"itemStyle(index)\"\n            @tap=\"click(index)\"\n            :class=\"[noBorderRight(index), `u-item-${index}`]\"\n            v-for=\"(item, index) in listInfo\"\n            :key=\"index\"\n        >\n            <view :style=\"textStyle(index)\" class=\"u-item-text u-line-1\">{{ item.name }}</view>\n        </view>\n        <view class=\"u-item-bg\" :style=\"itemBarStyle\"></view>\n    </view>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, getCurrentInstance } from 'vue';\nimport { $u } from '../..';\nimport { SubsectionProps } from './types';\n\ndefineOptions({ name: 'u-subsection' });\n\n/**\n * subsection 分段器\n * @description 该分段器一般用于用户从几个选项中选择某一个的场景\n * @tutorial https://uviewpro.cn/zh/components/subsection.html\n * @property {Array} list 选项的数组，形式见上方\"基本使用\"\n * @property {String | Number} current 初始化时默认选中的选项索引值（默认0）\n * @property {String} activeColor 激活时的颜色，mode为subsection时固定为白色（默认#303133）\n * @property {String} inactiveColor 未激活时字体的颜色，mode为subsection时无效（默认#606266）\n * @property {String} mode 模式选择，见官网\"模式选择\"说明（默认button）\n * @property {String | Number} fontSize 字体大小，单位rpx（默认28）\n * @property {String | Number} height 组件高度，单位rpx（默认70）\n * @property {Boolean} animation 是否开启动画效果，见上方说明（默认true）\n * @property {Boolean} bold 激活选项的字体是否加粗（默认true）\n * @property {String} bgColor 组件背景颜色，mode为button时有效（默认#eeeeef）\n * @property {String} buttonColor 按钮背景颜色，mode为button时有效（默认#ffffff）\n * @property {Boolean} vibrateShort 在切换分段器的时候，是否让设备震一下（默认false）\n * @event {Function} change 分段器选项发生改变时触发\n * @example <u-subsection active-color=\"#ff9900\"></u-subsection>\n */\n\ninterface ListItem {\n    name: string;\n    width?: number;\n    [key: string]: any;\n}\n\nconst props = defineProps(SubsectionProps);\n\nconst emit = defineEmits<{ (e: 'change', index: number): void }>();\n\n// 组件内部状态\nconst listInfo = ref<ListItem[]>([]);\nconst itemBgStyle = ref<{ [key: string]: any }>({\n    width: 0,\n    left: 0,\n    backgroundColor: '#ffffff',\n    height: '100%',\n    transition: ''\n});\nconst currentIndex = ref(Number(props.current));\nconst buttonPadding = 3; // mode = button 时，组件的内边距\nconst borderRadius = 5; // 圆角值\nconst firstTimeVibrateShort = ref(true); // 组件初始化时，会触发current变化，此时不应震动\nconst instanceId = $u.guid(); // 组件唯一 id\nconst instance = getCurrentInstance();\n\n// 监听 current 变化\nwatch(\n    () => props.current,\n    nVal => {\n        currentIndex.value = Number(nVal);\n        changeSectionStatus(currentIndex.value);\n    },\n    { immediate: true }\n);\n\n// 初始化 listInfo\nfunction initListInfo() {\n    // 将list的数据，传入listInfo数组，因为不能修改props传递的list值\n    // 可以接受直接数组形式，或者数组元素为对象的形式，如：['简介', '评论'],或者[{name: '简介'}, {name: '评论'}]\n    listInfo.value = props.list.map(val => {\n        if (typeof val !== 'object') {\n            return { width: 0, name: val };\n        } else {\n            return { ...val, width: 0 };\n        }\n    });\n}\n\ninitListInfo();\n\nonMounted(() => {\n    setTimeout(() => {\n        getTabsInfo();\n    }, 10);\n});\n\n/**\n * 设置mode=subsection时，滑块特有的样式\n */\nconst noBorderRight = computed<(index: number) => string>(() => {\n    return (index: number) => {\n        if (props.mode !== 'subsection') return '';\n        let classs = '';\n        // 不显示右边的边框\n        if (index < props.list.length - 1) classs += ' u-none-border-right';\n        // 显示整个组件的左右边圆角\n        if (index === 0) classs += ' u-item-first';\n        if (index === props.list.length - 1) classs += ' u-item-last';\n        return classs;\n    };\n});\n\n/**\n * 文字的样式\n */\nconst textStyle = computed<(index: number) => Record<string, any>>(() => {\n    return (index: number) => {\n        const style: Record<string, any> = {};\n        // 设置字体颜色\n        if (props.mode === 'subsection') {\n            style.color = index === currentIndex.value ? '#ffffff' : props.activeColor;\n        } else {\n            style.color = index === currentIndex.value ? props.activeColor : props.inactiveColor;\n        }\n        // 字体加粗\n        if (index === currentIndex.value && props.bold) style.fontWeight = 'bold';\n        // 文字大小\n        style.fontSize = props.fontSize + 'rpx';\n        return style;\n    };\n});\n\n/**\n * 每个分段器item的样式\n */\nconst itemStyle = computed<(index: number) => Record<string, any>>(() => {\n    return (index: number) => {\n        const style: Record<string, any> = {};\n        if (props.mode === 'subsection') {\n            style.borderColor = props.activeColor;\n            style.borderWidth = '1px';\n            style.borderStyle = 'solid';\n        }\n        return style;\n    };\n});\n\n/**\n * mode=button时，外层view的样式\n */\nconst subsectionStyle = computed<Record<string, any>>(() => {\n    const style: Record<string, any> = {};\n    style.height = uni.upx2px(Number(props.height)) + 'px';\n    if (props.mode === 'button') {\n        style.backgroundColor = props.bgColor;\n        style.padding = `${buttonPadding}px`;\n        style.borderRadius = `${borderRadius}px`;\n    }\n    return style;\n});\n\n/**\n * 滑块的样式\n */\nconst itemBarStyle = computed<Record<string, any>>(() => {\n    const style: Record<string, any> = {};\n    style.backgroundColor = props.activeColor;\n    style.zIndex = 1;\n    if (props.mode === 'button') {\n        style.backgroundColor = props.buttonColor;\n        style.borderRadius = `${borderRadius}px`;\n        style.bottom = `${buttonPadding}px`;\n        style.height = uni.upx2px(Number(props.height)) - buttonPadding * 2 + 'px';\n        style.zIndex = 0;\n    }\n    return Object.assign({}, itemBgStyle.value, style);\n});\n\n/**\n * 改变滑块的样式\n * @param nVal 当前选中索引\n */\nfunction changeSectionStatus(nVal: number) {\n    if (props.mode === 'subsection') {\n        // 根据滑块在最左边和最右边时，显示左边和右边的圆角\n        if (nVal === props.list.length - 1) {\n            itemBgStyle.value.borderRadius = `0 ${buttonPadding}px ${buttonPadding}px 0`;\n        }\n        if (nVal === 0) {\n            itemBgStyle.value.borderRadius = `${buttonPadding}px 0 0 ${buttonPadding}px`;\n        }\n        if (nVal > 0 && nVal < props.list.length - 1) {\n            itemBgStyle.value.borderRadius = '0';\n        }\n    }\n    // 更新滑块的位置\n    setTimeout(() => {\n        itemBgLeft();\n    }, 10);\n    if (props.vibrateShort && !firstTimeVibrateShort.value) {\n        // 使手机产生短促震动，微信小程序有效，APP(HX 2.6.8)和H5无效\n\n        uni.vibrateShort();\n\n    }\n    // 第一次过后，设置firstTimeVibrateShort为false，让其下一次可以震动(如果允许震动的话)\n    firstTimeVibrateShort.value = false;\n}\n\n/**\n * 点击分段器选项\n * @param index 当前点击索引\n */\nfunction click(index: number) {\n    // 不允许点击当前激活选项\n    if (index === currentIndex.value) return;\n    currentIndex.value = index;\n    changeSectionStatus(index);\n    emit('change', index);\n}\n\n/**\n * 获取各个tab的节点信息\n */\nfunction getTabsInfo() {\n    const view = uni.createSelectorQuery().in(instance?.proxy);\n    for (let i = 0; i < props.list.length; i++) {\n        view.select(`#${instanceId} .u-item-${i}`).boundingClientRect();\n    }\n    view.exec((res: any[]) => {\n        if (!res.length) {\n            setTimeout(() => {\n                getTabsInfo();\n                return;\n            }, 10);\n        }\n        // 将分段器每个item的宽度，放入listInfo数组\n        res.map((val, index) => {\n            listInfo.value[index].width = val.width;\n        });\n        // 初始化滑块的宽度\n        if (props.mode === 'subsection' || props.mode === 'button') {\n            itemBgStyle.value.width = listInfo.value[0]?.width + 'px';\n        }\n        // 初始化滑块的位置\n        itemBgLeft();\n    });\n}\n\n/**\n * 计算滑块左侧距离\n */\nfunction itemBgLeft() {\n    // 根据是否开启动画效果\n    if (props.animation) {\n        itemBgStyle.value.transition = 'all 0.35s';\n    } else {\n        itemBgStyle.value.transition = 'all 0s';\n    }\n    let left = 0;\n    // 计算当前活跃item到组件左边的距离\n    listInfo.value.forEach((val, index) => {\n        if (index < currentIndex.value) left += val.width ?? 0;\n    });\n    // 根据mode不同模式，计算滑块需要移动的距离\n    if (props.mode === 'subsection') {\n        itemBgStyle.value.left = left + 'px';\n    } else if (props.mode === 'button') {\n        itemBgStyle.value.left = left + buttonPadding + 'px';\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../libs/css/style.components.scss';\n\n.u-subsection {\n    @include vue-flex;\n    align-items: center;\n    overflow: hidden;\n    position: relative;\n}\n\n.u-item {\n    flex: 1;\n    text-align: center;\n    font-size: 26rpx;\n    height: 100%;\n    @include vue-flex;\n    align-items: center;\n    justify-content: center;\n    color: $u-main-color;\n    padding: 0 6rpx;\n}\n\n.u-item-bg {\n    background-color: $u-type-primary;\n    position: absolute;\n    z-index: -1;\n}\n\n.u-none-border-right {\n    border-right: none !important;\n}\n\n.u-item-first {\n    border-top-left-radius: 8rpx;\n    border-bottom-left-radius: 8rpx;\n}\n\n.u-item-last {\n    border-top-right-radius: 8rpx;\n    border-bottom-right-radius: 8rpx;\n}\n\n.u-item-text {\n    transition: all 0.35s;\n    color: $u-main-color;\n    @include vue-flex;\n    align-items: center;\n    position: relative;\n    z-index: 3;\n}\n</style>\n","import Component from '/Users/Coding/uniapp/weixinphone/node_modules/uview-pro/components/u-subsection/u-subsection.vue'\nwx.createComponent(Component)"],"names":["ref","$u","getCurrentInstance","watch","onMounted","computed","uni"],"mappings":"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","x_google_ignoreList":[0]}