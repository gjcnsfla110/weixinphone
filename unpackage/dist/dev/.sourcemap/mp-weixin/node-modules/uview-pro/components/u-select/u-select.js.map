{"version":3,"file":"u-select.js","sources":["node_modules/uview-pro/components/u-select/u-select.vue","/Users/Coding/uniapp/weixinphone/node_modules/uview-pro/components/u-select/u-select.vue?type=component"],"sourcesContent":["<template>\n    <view class=\"u-select\">\n        <!-- <view class=\"u-select__action\" :class=\"{\n\t\t'u-select--border': border\n\t}\" @tap.stop=\"selectHandler\">\n\t\t<view class=\"u-select__action__icon\" :class=\"{\n\t\t\t'u-select__action__icon--reverse': value == true\n\t\t}\">\n\t\t\t<u-icon name=\"arrow-down-fill\" size=\"26\" color=\"#c0c4cc\"></u-icon>\n\t\t</view>\n\t</view> -->\n        <u-popup\n            :maskCloseAble=\"maskCloseAble\"\n            mode=\"bottom\"\n            :popup=\"false\"\n            v-model=\"popupValue\"\n            length=\"auto\"\n            :safeAreaInsetBottom=\"safeAreaInsetBottom\"\n            @close=\"close\"\n            :z-index=\"uZIndex\"\n        >\n            <view class=\"u-select\">\n                <view class=\"u-select__header\" @touchmove.stop.prevent=\"\">\n                    <view\n                        class=\"u-select__header__cancel u-select__header__btn\"\n                        :style=\"{ color: cancelColor }\"\n                        hover-class=\"u-hover-class\"\n                        :hover-stay-time=\"150\"\n                        @tap=\"getResult('cancel')\"\n                    >\n                        {{ cancelText }}\n                    </view>\n                    <view class=\"u-select__header__title\">\n                        {{ title }}\n                    </view>\n                    <view\n                        class=\"u-select__header__confirm u-select__header__btn\"\n                        :style=\"{ color: moving ? cancelColor : confirmColor }\"\n                        hover-class=\"u-hover-class\"\n                        :hover-stay-time=\"150\"\n                        @touchmove.stop=\"\"\n                        @tap.stop=\"getResult('confirm')\"\n                    >\n                        {{ confirmText }}\n                    </view>\n                </view>\n                <view class=\"u-select__body\">\n                    <picker-view\n                        @change=\"columnChange\"\n                        class=\"u-select__body__picker-view\"\n                        :value=\"defaultSelector\"\n                        @pickstart=\"pickstart\"\n                        @pickend=\"pickend\"\n                        v-if=\"modelValue\"\n                    >\n                        <picker-view-column v-for=\"(item, index) in columnData\" :key=\"index\">\n                            <view\n                                class=\"u-select__body__picker-view__item\"\n                                v-for=\"(item1, index1) in item\"\n                                :key=\"index1\"\n                            >\n                                <view class=\"u-line-1\">{{ item1[labelName] }}</view>\n                            </view>\n                        </picker-view-column>\n                    </picker-view>\n                </view>\n            </view>\n        </u-popup>\n    </view>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch } from 'vue';\nimport { SelectProps } from './types';\nimport type { SelectListItem } from '../../types/global';\n\ndefineOptions({\n    name: 'u-select'\n});\n\n/**\n * select 列选择器\n * @description 此选择器用于单列，多列，多列联动的选择场景。(从1.3.0版本起，不建议使用Picker组件的单列和多列模式，Select组件是专门为列选择而构造的组件，更简单易用。)\n * @tutorial https://uviewpro.cn/zh/components/select.html\n * @property {String} mode 模式选择，\"single-column\"-单列模式，\"mutil-column\"-多列模式，\"mutil-column-auto\"-多列联动模式\n * @property {Array} list 列数据，数组形式，见官网说明\n * @property {Boolean} v-model 布尔值变量，用于控制选择器的弹出与收起\n * @property {Boolean} safe-area-inset-bottom 是否开启底部安全区适配(默认false)\n * @property {String} cancel-color 取消按钮的颜色（默认#606266）\n * @property {String} confirm-color 确认按钮的颜色(默认#2979ff)\n * @property {String} confirm-text 确认按钮的文字\n * @property {String} cancel-text 取消按钮的文字\n * @property {String} default-value 提供的默认选中的下标，见官网说明\n * @property {Boolean} mask-close-able 是否允许通过点击遮罩关闭Picker(默认true)\n * @property {String Number} z-index 弹出时的z-index值(默认10075)\n * @property {String} value-name 自定义list数据的value属性名 1.3.6\n * @property {String} label-name 自定义list数据的label属性名 1.3.6\n * @property {String} child-name 自定义list数据的children属性名，只对多列联动模式有效 1.3.7\n * @event {Function} confirm 点击确定按钮，返回当前选择的值\n * @example <u-select v-model=\"show\" :list=\"list\"></u-select>\n */\n\nconst props = defineProps(SelectProps);\nconst emit = defineEmits(['update:modelValue', 'confirm', 'cancel', 'click']);\n// 用于列改变时，保存当前的索引，下一次变化时比较得出是哪一列发生了变化\n\nconst defaultSelector = ref<number[]>([0]);\n// picker-view的数据\nconst columnData = ref<SelectListItem[][]>([]);\n// 每次队列发生变化时，保存选择的结果\nconst selectValue = ref<SelectListItem[]>([]);\n// 上一次列变化时的index\nconst lastSelectIndex = ref<number[]>([]);\n// 列数\nconst columnNum = ref(0);\n// 列是否还在滑动中，微信小程序如果在滑动中就点确定，结果可能不准确\nconst moving = ref(false);\n// 如果用户有传递z-index值，优先使用\nconst uZIndex = computed(() => (props.zIndex ? props.zIndex : 10075));\n\nconst popupValue = computed({\n    get: () => props.modelValue,\n    set: (val: boolean) => emit('update:modelValue', val)\n});\n\nwatch(\n    () => props.modelValue,\n    val => {\n        if (val) setTimeout(() => init(), 10);\n    },\n    { immediate: true }\n);\n// 标识滑动开始，只有微信小程序才有这样的事件\nfunction pickstart() {\n\n    moving.value = true;\n\n}\nfunction pickend() {\n\n    moving.value = false;\n\n}\n\nfunction init() {\n    setColumnNum();\n    setDefaultSelector();\n    setColumnData();\n    setSelectValue();\n}\n\n// 获取默认选中列下标\nfunction setDefaultSelector() {\n    // 如果没有传入默认选中的值，生成长度为columnNum，用0填充的数组\n    defaultSelector.value =\n        props.defaultValue.length == columnNum.value ? props.defaultValue : Array(columnNum.value).fill(0);\n    lastSelectIndex.value = [...defaultSelector.value];\n}\n// 计算列数\nfunction setColumnNum() {\n    // 单列的列数为1\n    if (props.mode == 'single-column') columnNum.value = 1;\n    // 多列时，this.list数组长度就是列数\n    else if (props.mode == 'mutil-column') columnNum.value = props.list.length;\n    // 多列联动时，通过历遍this.list的第一个元素，得出有多少列\n    else if (props.mode == 'mutil-column-auto') {\n        let num = 1;\n        let column: any = props.list;\n        // 只要有元素并且第一个元素有children属性，继续遍历\n        while (Array.isArray(column) && column[0] && typeof column[0] === 'object' && props.childName in column[0]) {\n            column = column[0][props.childName];\n            num++;\n        }\n        columnNum.value = num;\n    }\n}\n\n// 获取需要展示在picker中的列数据\nfunction setColumnData() {\n    let data: SelectListItem[][] = [];\n    selectValue.value = [];\n    if (props.mode == 'mutil-column-auto') {\n        // 获得所有数据中的第一个元素\n        let column: any = props.list[defaultSelector.value.length ? defaultSelector.value[0] : 0];\n        // 通过循环所有的列数，再根据设定列的数组，得出当前需要渲染的整个列数组\n        for (let i = 0; i < columnNum.value; i++) {\n            // 第一列默认为整个list数组\n            if (i == 0) {\n                data[i] = is2DList(props.list) ? props.list[i] || [] : (props.list as SelectListItem[]);\n                column = column && typeof column === 'object' ? column[props.childName] : [];\n            } else {\n                // 大于第一列时，判断是否有默认选中的，如果没有就用该列的第一项\n                data[i] = Array.isArray(column) ? column : [];\n                column =\n                    Array.isArray(column) &&\n                    column[defaultSelector.value[i]] &&\n                    typeof column[defaultSelector.value[i]] === 'object'\n                        ? column[defaultSelector.value[i]][props.childName]\n                        : [];\n            }\n        }\n    } else if (props.mode == 'single-column') {\n        data[0] = Array.isArray(props.list) && !is2DList(props.list) ? (props.list as SelectListItem[]) : [];\n    } else if (props.mode == 'mutil-column') {\n        data = is2DList(props.list) ? props.list : [props.list as SelectListItem[]];\n    }\n    columnData.value = data;\n}\n\n// 获取默认选中的值，如果没有设置defaultValue，就默认选中每列的第一个\nfunction setSelectValue() {\n    for (let i = 0; i < columnNum.value; i++) {\n        const tmp = columnData.value[i][defaultSelector.value[i]];\n        let data: any = {\n            value: tmp ? tmp[props.valueName] : null,\n            label: tmp ? tmp[props.labelName] : null\n        };\n\n        // 判断是否存在额外的参数，如果存在，就返回\n        if (tmp && tmp.extra !== undefined) data.extra = tmp.extra;\n        selectValue.value.push(data);\n    }\n}\n\n// 列选项\nfunction columnChange(e: any) {\n    let index: number = -1;\n    const columnIndex = e.detail.value;\n    // 由于后面是需要push进数组的，所以需要先清空数组\n    selectValue.value = [];\n    defaultSelector.value = columnIndex;\n    if (props.mode == 'mutil-column-auto') {\n        // 对比前后两个数组，寻找变更的是哪一列，如果某一个元素不同，即可判定该列发生了变化\n        lastSelectIndex.value.map((val, idx) => {\n            if (val != columnIndex[idx]) index = idx;\n        });\n        for (let i = index + 1; i < columnNum.value; i++) {\n            // 当前变化列的下一列的数据，需要获取上一列的数据，同时需要指定是上一列的第几个的children，再往后的\n            // 默认是队列的第一个为默认选项\n            const prevCol = columnData.value[i - 1];\n            const prevIdx = i - 1 == index ? columnIndex[index] : 0;\n            columnData.value[i] =\n                Array.isArray(prevCol) && prevCol[prevIdx] && typeof prevCol[prevIdx] === 'object'\n                    ? prevCol[prevIdx][props.childName]\n                    : [];\n            // 改变的列之后的所有列，默认选中第一个\n            defaultSelector.value[i] = 0;\n        }\n        // 在历遍的过程中，可能由于上一步修改this.columnData，导致产生连锁反应，程序触发columnChange，会有多次调用\n        // 只有在最后一次数据稳定后的结果是正确的，此前的历遍中，可能会产生undefined，故需要判断\n        columnIndex.map((item: any, idx: number) => {\n            let data = columnData.value[idx][columnIndex[idx]];\n            let tmp: any = {\n                value: data ? data[props.valueName] : null,\n                label: data ? data[props.labelName] : null\n            };\n            // 判断是否有需要额外携带的参数\n            if (data && data.extra !== undefined) tmp.extra = data.extra;\n            selectValue.value.push(tmp);\n        });\n        // 保存这一次的结果，用于下次列发生变化时作比较\n        lastSelectIndex.value = [...columnIndex];\n    } else if (props.mode == 'single-column') {\n        let data = columnData.value[0][columnIndex[0]];\n        // 初始默认选中值\n        let tmp: any = {\n            value: data ? data[props.valueName] : null,\n            label: data ? data[props.labelName] : null\n        };\n        // 判断是否有需要额外携带的参数\n        if (data && data.extra !== undefined) tmp.extra = data.extra;\n        selectValue.value.push(tmp);\n    } else if (props.mode == 'mutil-column') {\n        // 初始默认选中值\n        columnIndex.map((item: any, idx: number) => {\n            let data = columnData.value[idx][columnIndex[idx]];\n            // 初始默认选中值\n            let tmp: any = {\n                value: data ? data[props.valueName] : null,\n                label: data ? data[props.labelName] : null\n            };\n            // 判断是否有需要额外携带的参数\n            if (data && data.extra !== undefined) tmp.extra = data.extra;\n            selectValue.value.push(tmp);\n        });\n    }\n}\n\nfunction close() {\n    emit('update:modelValue', false);\n    // 重置default-value默认值\n    defaultSelector.value = [0];\n}\n// 点击确定或者取消\nfunction getResult(event: 'update:modelValue' | 'confirm' | 'cancel' | 'click' | null = null) {\n\n    if (moving.value) return;\n\n\n    if (event) emit(event, selectValue.value);\n    close();\n}\n\nfunction selectHandler() {\n    emit('click');\n}\n\n// 类型守卫提前声明\nfunction is2DList(list: SelectListItem[] | SelectListItem[][]): list is SelectListItem[][] {\n    return Array.isArray(list) && list.length > 0 && Array.isArray(list[0]);\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '../../libs/css/style.components.scss';\n\n.u-select {\n    &__action {\n        position: relative;\n        line-height: $u-form-item-height;\n        height: $u-form-item-height;\n\n        &__icon {\n            position: absolute;\n            right: 20rpx;\n            top: 50%;\n            transition: transform 0.4s;\n            transform: translateY(-50%);\n            z-index: 1;\n\n            &--reverse {\n                transform: rotate(-180deg) translateY(50%);\n            }\n        }\n    }\n\n    &__hader {\n        &__title {\n            color: $u-content-color;\n        }\n    }\n\n    &--border {\n        border-radius: 6rpx;\n        border-radius: 4px;\n        border: 1px solid $u-form-item-border-color;\n    }\n\n    &__header {\n        @include vue-flex;\n        align-items: center;\n        justify-content: space-between;\n        height: 80rpx;\n        padding: 0 40rpx;\n    }\n\n    &__body {\n        width: 100%;\n        height: 500rpx;\n        overflow: hidden;\n        background-color: #fff;\n\n        &__picker-view {\n            height: 100%;\n            box-sizing: border-box;\n\n            &__item {\n                @include vue-flex;\n                align-items: center;\n                justify-content: center;\n                font-size: 32rpx;\n                color: $u-main-color;\n                padding: 0 8rpx;\n            }\n        }\n    }\n}\n</style>\n","import Component from '/Users/Coding/uniapp/weixinphone/node_modules/uview-pro/components/u-select/u-select.vue'\nwx.createComponent(Component)"],"names":["ref","computed","watch"],"mappings":"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","x_google_ignoreList":[0]}