{"version":3,"file":"request.js","sources":["utill/request.js"],"sourcesContent":["// api/request.ts\nconst BASE_URL = '/api/'\n\n// 공용 request 함수\nfunction request(options){\n  return new Promise((resolve, reject) => {\n    // 로딩 표시 (옵션에 따라 끄고 켤 수도 있음)\n    uni.showLoading({ title: '加载中...', mask: true })\n\n    uni.request({\n      url: BASE_URL + options.url,\n      method: options.method || 'GET',\n      data: options.data || {},\n\t  header: {\n\t          'Content-Type': 'application/json;charset=UTF-8',\n\t          ...options.header\n\t  },\n      success: (res) => {\n        // HTTP 상태 검증\n        if (res.statusCode !== 200) {\n\t\t  uni.showToast({ title: '서버 오류', icon: 'none' })\n          reject(res.data);\n        }\n\t\tlet responesData = res.data.data;\n\t\tresolve(responesData);\n      },\n      fail: (err) => {\n        uni.showToast({ title: '네트워크 오류', icon: 'none' })\n        reject(err)\n      },\n      complete: () => {\n        uni.hideLoading()\n      }\n    })\n  })\n}\n\nexport function serviceGet(url,data,header){\n\t return request({url:url,method:'GET',data:data,header:header});\n}\n\nexport function servicePost(url,data,header){\n\treturn request({url:url,method:'POST',data:data,header:header});\n}"],"names":["uni"],"mappings":";;AACA,MAAM,WAAW;AAGjB,SAAS,QAAQ,SAAQ;AACvB,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtCA,kBAAG,MAAC,YAAY,EAAE,OAAO,UAAU,MAAM,MAAM;AAE/CA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAK,WAAW,QAAQ;AAAA,MACxB,QAAQ,QAAQ,UAAU;AAAA,MAC1B,MAAM,QAAQ,QAAQ,CAAE;AAAA,MAC3B,QAAQ;AAAA,QACA,gBAAgB;AAAA,QAChB,GAAG,QAAQ;AAAA,MAClB;AAAA,MACE,SAAS,CAAC,QAAQ;AAEhB,YAAI,IAAI,eAAe,KAAK;AAChCA,wBAAG,MAAC,UAAU,EAAE,OAAO,SAAS,MAAM,QAAQ;AACxC,iBAAO,IAAI,IAAI;AAAA,QAChB;AACP,YAAI,eAAe,IAAI,KAAK;AAC5B,gBAAQ,YAAY;AAAA,MACf;AAAA,MACD,MAAM,CAAC,QAAQ;AACbA,sBAAG,MAAC,UAAU,EAAE,OAAO,WAAW,MAAM,QAAQ;AAChD,eAAO,GAAG;AAAA,MACX;AAAA,MACD,UAAU,MAAM;AACdA,sBAAAA,MAAI,YAAa;AAAA,MAClB;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAEO,SAAS,WAAW,KAAI,MAAK,QAAO;AACzC,SAAO,QAAQ,EAAC,KAAQ,QAAO,OAAM,MAAU,OAAa,CAAC;AAC/D;;"}